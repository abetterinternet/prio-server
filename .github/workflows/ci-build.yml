name: facilitator-ci-build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-rust:
    defaults:
      run:
        working-directory: facilitator
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint
      run: cargo fmt --message-format human -- --check
    - uses: actions-rs/clippy-check@v1
      with:
        # https://docs.github.com/actions/reference/authentication-in-a-workflow
        token: ${{ secrets.GITHUB_TOKEN }}
        # working-directory only applies to run actions, so path to Cargo.toml needs to be manually specified
        args: --manifest-path facilitator/Cargo.toml --all-targets
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  terraform:
    defaults:
      run:
        working-directory: terraform
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
    - name: Terraform fmt
      run: terraform fmt --check --recursive
    - name: Terraform init
      run: terraform init --backend=false
    - name: Terraform validate
      run: terraform validate

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v1
    - name: build
      uses: docker/build-push-action@v2
      with:
        file: ./facilitator/Dockerfile
  
  build-deploy-tool:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
    
    - name: Get dependencies
      run: go get -v -t -d ./...
      working_directory: deploy-tool
    
    - name: Get linter
      run: go install golang.org/x/lint/golint
    
    - name: Vet
      run: go vet ./...
      working_directory: deploy-tool
    
    - name: Test
      run: go test -race --coverprofile=coverage.coverprofile --covermode=atomic ./...
      working_directory: deploy-tool
    
    - name: Upload test coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
        token: